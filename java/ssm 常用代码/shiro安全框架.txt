1.登录认证与授权(shiro)
a.spring配置(需要实例三个bean Realm, securityManager, shiroFilter)  Realm作用：数据源与验证

//读取properties配置文件
<bean id="propertyConfigurer" class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">      
   	<property name="location" value="/WEB-INF/properties/jdbc.properties"/>      
</bean>

<bean id="jdbcRealm" class="org.apache.shiro.realm.jdbc.JdbcRealm">
	<property name="name" value="jdbcRealm" />
	<property name="dataSource" ref="dataSource" />
	//自定义查询语句
	<property name="authenticationQuery" value="${jdbcRealm.authenticationQuery}" />
</bean>
	
<bean id="securityManager" class="org.apache.shiro.web.mgt.DefaultWebSecurityManager">
	<property name="realm" ref="jdbcRealm"></property>
</bean>
	
<bean id="shiroFilter" class="org.apache.shiro.spring.web.ShiroFilterFactoryBean">
	<property name="securityManager" ref="securityManager"></property>
	<property name="loginUrl" value="/logins"></property>
	<property name="successUrl" value="/user/main"></property>
	<property name="unauthorizedUrl" value="/error"></property>
	<property name="filterChainDefinitions">
		<value>
			/logins = anon
			/user/login =anon
			/register.jsp = anon
			/success = anon
			/images/** = anon
			/user/logout = logout	
			/** = authc				
		</value>
	</property>
</bean>

b.web.xml配置
<!-- shiro过滤器配置 -->
<filter>
	<filter-name>shiroFilter</filter-name>
	<filter-class>org.springframework.web.filter.DelegatingFilterProxy</filter-class>
</filter>
<filter-mapping>
	<filter-name>shiroFilter</filter-name>
	<url-pattern>/*</url-pattern>
</filter-mapping>
