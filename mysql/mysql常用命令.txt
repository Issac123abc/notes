常用命令
1.cmd
mysql -uroot -p

2.git bash
winpty -uroot -p

退出
\c

= 	mysql会默认是比较运算符，
:=	才是赋值运算符

3.use test;

4.delimiter //(;)     --结束符

系统变量与自定义变量
系统变量:@@
自定义变量:@
5.set @val=1;       --设置自定义变量值

6.select @val;     --查询自定义变量值

select @name:=name from user;
select name,age from user where id=2 into @name,@age;

7.show table status like 'users'\G 	--	查看表状态（大小，engine等）

8.show index from user;			--查看索引

增
1.create database test default character set 'UTF8';

2.create table
CREATE TABLE user(

id INT UNSIGNED PRIMARY KEY AUTO_INCREMENT COMMENT 'id'
username VARCHAR(20),

password CHAR(12),

sex ENUM('男','女','保密')

)ENGINE=INNODB CHARSET=UTF8;


CREATE TABLE user(

)ENGINE=INNODB CHARSET=UTF8;

create table user2 like user1;		--user2表结构跟user1一样

完整性约束 
UNSINGED 非负数
AUTO_INCREMENT(一个表只有一个，配合索引使用) 
DEFAULT 
NOT NULL
UNIQUE  不包括NULL
FOREIGN KEY
ZEROFILL  零填充
COMMENT  '注释'

删
1.drop database test;       --删除数据库

2.drop table test;      


改
1.alter database test default character set 'UTF8';    --修改数据库编码方式

2.alter table test          --修改，删除字段
add test1 char(20),
add test2 tinyint（1) not null default 0,
drop test3;

3.alter table test
alter test1 set default 10 fitst/after col;    -- 修改默认值

alter table test
alter test1 drop default;      --删除默认值

4.modify              --修改属性
alter table test
modify test varchar(10);

5.change	      --修改字段名与属性
alter table test
change test tt varchar(10);

6.alter table test    --添加，删除主键
add primary key(id);/drop primary key;

7.alter table test
add unique key(index_name);/drop index index_name

8.alter table test	--修改表名
rename test1;


查
1.show databases;
show create database test    --查看数据库详细信息
show tables;
show create table test;      --查看表信息
desc test;                   --查看表结构
show warnings;

2.select database();    --
select version();
select user();


外键（默认是禁止删除或更新父表中的记录，也可以设置成级联属性cascade）
1.foreign key(col_name) references table_name(id)
子表外键必须关联主表主键
关联字段类型要一致，包括unsigned
如果子表外键字段没有索引，会自动创建一个普通索引

2.动态添加，删除外键
alter table news
add [constraint 外键名] foreign key(cate_id) references news_cate(id);

alter table news
drop foreign key fk_name;		--（从show create table news中查看外键名）


索引
--注意，索引失效情况：1.使用or	2.like+前面有%

1.添加普通索引
alter table user
add index index_name(col_name);

2.唯一索引
alter table user
add unique index index_name(col_name);

3.全文索引(用于char、varchar、text类型的字段)	
alter table user
add fulltext index index_name(col_name);

4.删除索引
drop index index_name on table_name;

5.查看索引
show index from user;

6.查看select 语句是否使用索引
explain select * from user where age=18;


视图		--主要作用是复用，只有结构定义，不保存真实数据，即是只有.frm文件，没有.idb文件
1.创建视图
create view 视图名称 as select语句	--可以是普通查询、连接查询、联合查询、子查询

2.修改视图
alter view 视图名称 as 新的select 语句

3.删除视图
drop view 视图名称

4.向视图插入数据	--只能向单表视图插入数据
insert into 视图名称 values();

5.删除视图数据		--只能删除单表视图

6.更新视图数据		--只能修改视图可以查到的数据，并且不能修改后原来的记录查不到

7.视图算法
Undefined	

Temptable	--先执行视图select语句条件再执行 as select语句条件

Merge		--先合并再执行一次

用先后顺序的用Temptable算法，其它用默认

create algorithm=算法名称 view 视图名称 as select 语句


8.事务安全（要么都成功，要么都失败）
事务：一系列连续的操作
a.start transaction;		--开启事务

b.commit transaction;		--提交事务

c.rollback;			--回滚事务到开始事务前

回滚点--savepoint
savepoint sp;

rollback to sp;			--回滚到回滚点之前

事务四大特性:ACID
A:原子性(Atomicity)		--事务是数据库的逻辑工作单位，事务中包括的诸操作要么全做，要么全不做。
B:一致性(Consistency)		--事务执行的结果必须是使数据库从一个一致性状态变到另一个一致性状态。
C:隔离性(Isolation)		--一个事务的执行不能被其他事务干扰。
D:持续性/永久性(Durability)	--一个事务一旦提交，它对数据库中数据的改变就应该是永久性的。


锁机制：innodb默认是行锁，但如果在事务操作过程中，没有使用到索引，那么系统会由自动全表检索数据，自动升级为表锁。

隔离性用到锁机制，一个事务操作数据时会上锁（行锁或表锁），另一个事务要等待锁释放才能更改，commit和rollback都可以释放锁。











